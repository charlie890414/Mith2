! function (t, e) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = e(require("crypto-js"), require("axios")) : "function" == typeof define && define.amd ? define(["crypto-js", "axios"], e) : (t = t || self).MithVaultSDK = e(t.CryptoJS, t.axios)
}(this, function (c, u) {
    "use strict";

    function a(t, e) {
        for (var n = 0; n < e.length; n++) {
            var a = e[n];
            a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(t, a.key, a)
        }
    }

    function h() {
        var n = Date.now();
        return "undefined" != typeof performance && "function" == typeof performance.now && (n += performance.now()), "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (t) {
            var e = (n + 16 * Math.random()) % 16 | 0;
            return n = Math.floor(n / 16), ("x" === t ? e : 3 & e | 8).toString(16)
        })
    }

    function d(t) {
        var e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "GET",
            n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : {
                headers: null,
                data: null,
                params: null
            },
            a = n.params || n.data || {},
            i = n.headers || {};
        if ("client_id" in a) {
            var o = function (t, e) {
                var n = "";
                if (t && Array.isArray(t)) n = t.join(",");
                else if (t) {
                    var a = (i = t, Object.keys(i).sort().reduce(function (t, e) {
                        return t[e] = i[e], t
                    }, {}));
                    n = Object.keys(a).map(function (t) {
                        return "".concat(t, "=").concat(a[t])
                    }).join("&")
                } else t && (n = t.toString());
                var i;
                var o = c.HmacSHA512(n, e);
                return c.enc.Hex.stringify(o)
            }(a, c.enc.Hex.parse(this.clientSecert));
            i["X-Vault-Signature"] = o
        }
        var r = "".concat(this.api, "/").concat(t);
        try {
            return u({
                method: e,
                url: r,
                params: n.params,
                data: n.data,
                headers: i
            }).then(function (t) {
                return t.data
            }).catch(function (t) {
                throw t
            })
        } catch (t) {
            throw t
        }
    }

    function f() {
        return Math.floor(1e17 * Math.random())
    }
    return c = c && c.hasOwnProperty("default") ? c.default : c, u = u && u.hasOwnProperty("default") ? u.default : u,
        function () {
            function i() {
                var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                    e = t.clientId,
                    n = t.clientSecret,
                    a = t.miningKey;
                ! function (t, e) {
                    if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function")
                }(this, i), this.host = "https://2019-hackathon.mithvault.io", this.api = "https://2019-hackathon.api.mithvault.io", this.authorize = "/#/oauth/authorize", this.donate = "/#/donate", this.clientId = e, this.clientSecert = n, this.miningKey = a
            }
            var t, e, n;
            return t = i, (e = [{
                key: "getBindURI",
                value: function () {
                    var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : h(),
                        e = {
                            client_id: this.clientId,
                            state: t
                        },
                        n = Object.keys(e).map(function (t) {
                            return "".concat(t, "=").concat(e[t])
                        }).join("&");
                    return "".concat(this.host).concat(this.authorize, "?").concat(n)
                }
            }, {
                key: "getDonateURI",
                value: function () {
                    var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                        e = {
                            app_id: t.appID,
                            user_id: t.userID,
                            amount: t.amount,
                            state: t.state,
                            desc: t.description
                        },
                        n = Object.keys(e).map(function (t) {
                            return "".concat(t, "=").concat(e[t])
                        }).join("&");
                    return "".concat(this.host).concat(this.donate, "?").concat(n)
                }
            }, {
                key: "getAccessToken",
                value: function () {
                    var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                        e = t.grantCode,
                        n = t.state,
                        a = {
                            client_id: this.clientId,
                            timestamp: Math.floor(Date.now() / 1e3),
                            nonce: f(),
                            grant_code: e,
                            state: n
                        };
                    return d.call(this, "oauth/token", "POST", {
                        data: a
                    })
                }
            }, {
                key: "delUnbindToken",
                value: function () {
                    var t = (0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}).token,
                        e = {
                            client_id: this.clientId,
                            timestamp: Math.floor(Date.now() / 1e3),
                            nonce: f()
                        };
                    return d.call(this, "oauth/token", "DELETE", {
                        headers: {
                            Authorization: t
                        },
                        params: e
                    })
                }
            }, {
                key: "getClientInformation",
                value: function () {
                    var t = {
                        client_id: this.clientId,
                        timestamp: Math.floor(Date.now() / 1e3),
                        nonce: f()
                    };
                    return d.call(this, "oauth/balance", "GET", {
                        params: t
                    })
                }
            }, {
                key: "getUserInformation",
                value: function (t) {
                    var e = {
                        client_id: this.clientId,
                        timestamp: Math.floor(Date.now() / 1e3),
                        nonce: f()
                    };
                    return d.call(this, "oauth/user-info", "GET", {
                        headers: {
                            Authorization: t
                        },
                        params: e
                    })
                }
            }, {
                key: "getUserMiningAction",
                value: function () {
                    var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                        e = t.token,
                        n = t.nextId,
                        a = void 0 === n ? null : n,
                        i = {
                            client_id: this.clientId,
                            timestamp: Math.floor(Date.now() / 1e3),
                            nonce: f(),
                            mining_key: this.miningKey
                        },
                        o = {
                            Authorization: e
                        };
                    return a && (i.next_id = a), d.call(this, "mining", "GET", {
                        headers: o,
                        params: i
                    })
                }
            }, {
                key: "postUserMiningAction",
                value: function () {
                    var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                        e = t.token,
                        n = t.uuid,
                        a = void 0 === n ? h() : n,
                        i = t.reward,
                        o = void 0 === i ? 1 : i,
                        r = t.happenedAt,
                        c = void 0 === r ? null : r,
                        u = new Date,
                        s = function (t) {
                            return t.toString().padStart(2, 0)
                        },
                        l = {
                            client_id: this.clientId,
                            timestamp: Math.floor(Date.now() / 1e3),
                            nonce: f(),
                            mining_key: this.miningKey,
                            uuid: a,
                            reward: o,
                            happened_at: c || "".concat(u.getUTCFullYear(), "-").concat(s(u.getUTCMonth()), "-").concat(s(u.getUTCDate()), "T").concat(s(u.getUTCHours()), ":").concat(s(u.getUTCMinutes()), ":").concat(s(u.getUTCSeconds()))
                        };
                    return d.call(this, "mining", "POST", {
                        headers: {
                            Authorization: e
                        },
                        data: l
                    })
                }
            }, {
                key: "deleteUserMiningAction",
                value: function () {
                    var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                        e = t.token,
                        n = t.uuid,
                        a = {
                            client_id: this.clientId,
                            timestamp: Math.floor(Date.now() / 1e3),
                            nonce: f(),
                            mining_key: this.miningKey,
                            uuid: n || h()
                        };
                    return d.call(this, "mining", "DELETE", {
                        headers: {
                            Authorization: e
                        },
                        params: a
                    })
                }
            }]) && a(t.prototype, e), n && a(t, n), i
        }()
});